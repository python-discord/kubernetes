name: Lint Kubernetes manifests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Lint manifests

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get list of files
        run: |
          manifests=$(python scripts/find_manifests.py)
          manifests="${manifests//'%'/'%25'}"
          manifests="${manifests//$'\n'/'%0A'}"
          manifests="${manifests//$'\r'/'%0D'}"

          echo $manifests

          echo "manifests=$manifests" >> $GITHUB_OUTPUT
        id: manifest-files

      - uses: azure/setup-kubectl@v3

      - name: Authenticate with Kubernetes
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - uses: jb3/k8s-lint@master
        with:
          lintType: dryrun
          manifests: ${{ steps.manifest-files.outputs.manifests }}

      # Prepare the Pull Request Payload artifact. If this fails, we
      # we fail silently using the `continue-on-error` option. It's
      # nice if this succeeds, but if it fails for any reason, it
      # does not mean that our lint checks failed.
      - name: Prepare Pull Request Payload artifact
        id: prepare-artifact
        if: always() && github.event_name == 'pull_request'
        continue-on-error: true
        run: cat $GITHUB_EVENT_PATH | jq '.pull_request' > pull_request_payload.json

      # This only makes sense if the previous step succeeded. To
      # get the original outcome of the previous step before the
      # `continue-on-error` conclusion is applied, we use the
      # `.outcome` value. This step also fails silently.
      - name: Upload a Build Artifact
        if: always() && steps.prepare-artifact.outcome == 'success'
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: pull-request-payload
          path: pull_request_payload.json
